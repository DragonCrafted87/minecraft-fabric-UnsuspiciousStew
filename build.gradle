plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = "${project.archives_base_name}"
version = "${project.mod_version}+mc-${project.minecraft_version}+fabric"
group = project.maven_group

dependencies {
    minecraft "com.mojang:minecraft:1.17"
    mappings "net.fabricmc:yarn:1.17+build.1:v2"
    modImplementation "net.fabricmc:fabric-loader:0.11.3"

    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.34.9+1.17"
}

processResources {
    inputs.property "mod_version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "mod_version": project.mod_version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "xJqFTF5a"
    versionNumber = project.mod_version
    versionType = "release" // This is the default -- can also be `beta` or `alpha`
    uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ["1.18", "1.18.1", "1.18.2"] // Must be an array, even with only one version
    loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
    dependencies { // A special DSL for creating dependencies
      // scope.type
      // The scope can be `required`, `optional`, or `incompatible`
      // The type can either be `project` or `version`
      required.project "P7dR8mSH" // Creates a new required dependency on Fabric API
    }
    syncBodyFrom = rootProject.file("README.md").text

}
